// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let score = 0;
let timeLeft = 35; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è - 35 —Å–µ–∫—É–Ω–¥
let initialTime = 35; // –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
let gameInterval = null;
let timeInterval = null;
let isGameRunning = false;
let currentRank = "–ù–µ—Ç —Ä–∞–Ω–≥–∞";
let currentRankIcon = "üë∂";
let moveIntervalTime = 1000; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è (–ª–µ–≥–∫–∏–π —Ä–µ–∂–∏–º)

// –°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–≥–æ–≤
const ranks = [
    { name: "–ë—Ä–æ–Ω–∑–∞", minScore: 0, maxScore: 4, icon: "ü•â", color: "#cd7f32", emoji: "üòê", bgColor: "#cd7f32", textColor: "white" },
    { name: "–°–µ—Ä–µ–±—Ä–æ", minScore: 5, maxScore: 9, icon: "ü•à", color: "#c0c0c0", emoji: "üôÇ", bgColor: "#c0c0c0", textColor: "#333" },
    { name: "–ó–æ–ª–æ—Ç–æ", minScore: 10, maxScore: 14, icon: "ü•á", color: "#ffd700", emoji: "üòä", bgColor: "#ffd700", textColor: "#333" },
    { name: "–ü–ª–∞—Ç–∏–Ω–∞", minScore: 15, maxScore: 19, icon: "üíç", color: "#e5e4e2", emoji: "üòÑ", bgColor: "#e5e4e2", textColor: "#333" },
    { name: "–ê–ª–º–∞–∑", minScore: 20, maxScore: 24, icon: "üíé", color: "#b9f2ff", emoji: "ü§©", bgColor: "#b9f2ff", textColor: "#333" },
    { name: "–ú–∞—Å—Ç–µ—Ä", minScore: 25, maxScore: 29, icon: "üëë", color: "#9966cc", emoji: "üòé", bgColor: "#9966cc", textColor: "white" },
    { name: "–ü–∞–Ω–∫–ú–∞—Å—Ç–µ—Ä", minScore: 30, maxScore: Infinity, icon: "üî•", color: "#ff4081", emoji: "ü§ò", bgColor: "#ff4081", textColor: "white" }
];

// –ù–∞–±–æ—Ä —Å–º–∞–π–ª–∏–∫–æ–≤ –¥–ª—è —Å–º–µ–Ω—ã —Ü–µ–ª–∏
const emojis = ["üòé", "üòÅ", "üòÇ", "ü§£", "üòâ", "üòä", "üòç", "ü§î", "üòú", "üòè", "üòã", "üòá", "ü•≥", "ü§Ø", "üëΩ", "üëª", "ü§°", "üëæ"];

// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
const scoreValue = document.querySelector('.score-value');
const timeValue = document.querySelector('.time-value');
const rankValue = document.querySelector('.rank-value');
const rankDisplay = document.querySelector('.rank-display');
const rankIcon = document.querySelector('.rank-icon');
const emojiTarget = document.querySelector('.emoji-target');
const gameArea = document.querySelector('.game-area');
const startButton = document.getElementById('startButton');
const pauseButton = document.getElementById('pauseButton');
const difficultySelect = document.getElementById('difficulty');
const difficultyContainer = document.querySelector('.difficulty-container');
const modal = document.getElementById('resultModal');
const resultTitle = document.getElementById('resultTitle');
const resultMessage = document.getElementById('resultMessage');
const resultEmoji = document.getElementById('resultEmoji');
const finalRankIcon = document.getElementById('finalRankIcon');
const finalRankName = document.getElementById('finalRankName');
const finalScore = document.getElementById('finalScore');
const finalDifficulty = document.getElementById('finalDifficulty');
const timeUsed = document.getElementById('timeUsed');
const restartButton = document.getElementById('restartButton');
const lowerDifficultyButton = document.getElementById('lowerDifficultyButton');
const increaseDifficultyButton = document.getElementById('increaseDifficultyButton');
const shareButton = document.getElementById('shareButton');
const telegramShareButton = document.getElementById('telegramShareButton');

// –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
if (difficultyContainer) {
    difficultyContainer.style.display = 'none';
}

// –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
if (lowerDifficultyButton) {
    lowerDifficultyButton.style.display = 'none';
}
if (increaseDifficultyButton) {
    increaseDifficultyButton.style.display = 'none';
}

// –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
let gameAreaWidth = gameArea.clientWidth;
let gameAreaHeight = gameArea.clientHeight;
let targetWidth = emojiTarget.clientWidth;
let targetHeight = emojiTarget.clientHeight;

// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–ª–∏
let maxTop = gameAreaHeight - targetHeight;
let maxLeft = gameAreaWidth - targetWidth;

// –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
const lastPositions = [];
const maxLastPositions = 5; // –•—Ä–∞–Ω–∏–º –±–æ–ª—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∑–∏—Ü–∏–π

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å —Ä–∞–Ω–≥–∞
rankDisplay.classList.add('rank-initial');

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞ –∏–≥—Ä–æ–∫–∞
function updateRank() {
    let newRank = ranks[0]; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—Ä–æ–Ω–∑–∞
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—á–∫–æ–≤
    for (const rank of ranks) {
        if (score >= rank.minScore && score <= rank.maxScore) {
            newRank = rank;
        }
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã —Ä–∞–Ω–≥–∞
    rankDisplay.className = 'rank-display';
    
    if (newRank.name === "–ù–µ—Ç —Ä–∞–Ω–≥–∞") {
        rankDisplay.classList.add('rank-initial');
    } else {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–Ω–≥–∞
        rankDisplay.classList.add('rank-' + newRank.name.toLowerCase());
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–Ω–≥–∞
    rankValue.textContent = newRank.name;
    rankIcon.textContent = newRank.icon;
    rankValue.style.color = newRank.textColor;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–Ω–≥
    currentRank = newRank.name;
    currentRankIcon = newRank.icon;
    
    return newRank;
}

// –°–ª—É—á–∞–π–Ω—ã–π —Å–º–∞–π–ª–∏–∫ –¥–ª—è —Ü–µ–ª–∏
function getRandomEmoji() {
    const randomIndex = Math.floor(Math.random() * emojis.length);
    return emojis[randomIndex];
}

// –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–º–∞–π–ª–∏–∫ –≤ –Ω–æ–≤—É—é —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
function moveTargetToRandomPosition() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ–∫–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    gameAreaWidth = gameArea.clientWidth;
    gameAreaHeight = gameArea.clientHeight;
    maxTop = gameAreaHeight - targetHeight;
    maxLeft = gameAreaWidth - targetWidth;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    let newTop, newLeft;
    let isTooClose;
    
    do {
        newTop = Math.floor(Math.random() * maxTop);
        newLeft = Math.floor(Math.random() * maxLeft);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –±–ª–∏–∑–∫–æ –∫ –ø–æ—Å–ª–µ–¥–Ω–∏–º –ø–æ–∑–∏—Ü–∏—è–º
        isTooClose = lastPositions.some(pos => {
            const distance = Math.sqrt(Math.pow(pos.top - newTop, 2) + Math.pow(pos.left - newLeft, 2));
            return distance < 100; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏—è–º–∏
        });
    } while (isTooClose && lastPositions.length > 0);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –≤ –∏—Å—Ç–æ—Ä–∏—é
    lastPositions.push({ top: newTop, left: newLeft });
    if (lastPositions.length > maxLastPositions) {
        lastPositions.shift();
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–∞
    emojiTarget.style.top = newTop + 'px';
    emojiTarget.style.left = newLeft + 'px';
    
    // –ú–µ–Ω—è–µ–º —Å–º–∞–π–ª–∏–∫
    emojiTarget.textContent = getRandomEmoji();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
function checkGameStatus() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    if (timeLeft <= 0) {
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥
        const finalRank = updateRank();
        let message = `–í—Ä–µ–º—è –≤—ã—à–ª–æ! –í–∞—à —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—á–µ—Ç: ${score} –æ—á–∫–æ–≤.`;
        
        if (finalRank.name === "–ü–∞–Ω–∫–ú–∞—Å—Ç–µ—Ä") {
            endGame(true, `${message} –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π ${finalRank.name}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!`);
        } else if (score >= 20) {
            endGame(true, `${message} –í–∞—à —Ä–∞–Ω–≥: ${finalRank.name}. –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!`);
        } else {
            endGame(false, `${message} –í–∞—à —Ä–∞–Ω–≥: ${finalRank.name}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!`);
        }
        return true;
    }
    return false;
}

// –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞
function createShareMessage() {
    const rank = updateRank();
    
    return `üéÆ –Ø –Ω–∞–±—Ä–∞–ª ${score} –æ—á–∫–æ–≤ –≤ –∏–≥—Ä–µ "–ü–æ–π–º–∞–π —Å–º–∞–π–ª–∏–∫"!\n` +
           `üèÜ –ú–æ–π —Ä–∞–Ω–≥: ${rank.name} ${rank.icon}\n` +
           `‚è±Ô∏è –í—Ä–µ–º—è: ${initialTime - timeLeft}/${initialTime} —Å–µ–∫\n` +
           `\nüî• –°–º–æ–∂–µ—à—å –ø–æ–±–∏—Ç—å –º–æ–π —Ä–µ–∫–æ—Ä–¥?`;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É
function endGame(isSuccess, message) {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ç–∞–π–º–µ—Ä—ã
    clearInterval(gameInterval);
    clearInterval(timeInterval);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥
    const finalRank = updateRank();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    resultTitle.textContent = finalRank.name === "–ü–∞–Ω–∫–ú–∞—Å—Ç–µ—Ä" ? "–ü–∞–Ω–∫–ú–∞—Å—Ç–µ—Ä!" : "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞";
    resultTitle.style.color = finalRank.color;
    resultMessage.textContent = message;
    resultEmoji.textContent = finalRank.emoji;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥
    finalRankIcon.textContent = finalRank.icon;
    finalRankName.textContent = finalRank.name;
    finalRankName.style.color = finalRank.color;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    finalScore.textContent = score;
    timeUsed.textContent = `${initialTime - timeLeft}/${initialTime} —Å–µ–∫`;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
    const statItems = document.querySelectorAll('.stat-item');
    statItems.forEach(item => {
        const label = item.querySelector('.stat-label');
        if (label && label.textContent === "–°–ª–æ–∂–Ω–æ—Å—Ç—å:") {
            item.style.display = 'none';
        }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = "flex";
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    isGameRunning = false;
    startButton.disabled = false;
    pauseButton.disabled = true;
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function startGame() {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∏ —Å—á–µ—Ç
    timeLeft = initialTime;
    score = 0;
    scoreValue.textContent = score;
    timeValue.textContent = timeLeft;
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–∞–Ω–≥
    rankValue.textContent = "–ù–µ—Ç —Ä–∞–Ω–≥–∞";
    rankIcon.textContent = "üë∂";
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å —Ä–∞–Ω–≥–∞ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π
    rankDisplay.className = 'rank-display rank-initial';
    rankValue.style.color = "black";
    
    // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∑–∏—Ü–∏–π
    lastPositions.length = 0;
    
    // –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–º–µ—â–∞—Ç—å —Å–º–∞–π–ª–∏–∫ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    gameInterval = setInterval(moveTargetToRandomPosition, moveIntervalTime);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
    timeInterval = setInterval(() => {
        timeLeft--;
        timeValue.textContent = timeLeft;
        
        if (timeLeft <= 0) {
            checkGameStatus();
        }
    }, 1000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    isGameRunning = true;
    startButton.disabled = true;
    pauseButton.disabled = false;
    pauseButton.textContent = "–ü–∞—É–∑–∞";
    
    // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–º–∞–π–ª–∏–∫ –≤ —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    moveTargetToRandomPosition();
}

// –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä—ã
function togglePause() {
    if (isGameRunning) {
        // –ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä—É
        clearInterval(gameInterval);
        clearInterval(timeInterval);
        isGameRunning = false;
        pauseButton.textContent = "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å";
    } else {
        // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä—É
        gameInterval = setInterval(moveTargetToRandomPosition, moveIntervalTime);
        timeInterval = setInterval(() => {
            timeLeft--;
            timeValue.textContent = timeLeft;
            
            if (timeLeft <= 0) {
                checkGameStatus();
            }
        }, 1000);
        
        isGameRunning = true;
        pauseButton.textContent = "–ü–∞—É–∑–∞";
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —á–µ—Ä–µ–∑ Web Share API
function shareResult() {
    const shareMessage = createShareMessage();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Web Share API
    if (navigator.share) {
        navigator.share({
            title: '–ú–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∏–≥—Ä–µ "–ü–æ–π–º–∞–π —Å–º–∞–π–ª–∏–∫"',
            text: shareMessage,
            url: window.location.href
        })
        .catch(error => {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:', error);
            // –ï—Å–ª–∏ Web Share API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
            copyToClipboard(shareMessage);
        });
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –∫–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        copyToClipboard(shareMessage);
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
function shareToTelegram() {
    const shareMessage = encodeURIComponent(createShareMessage());
    const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(window.location.href)}&text=${shareMessage}`;
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ –≤ Telegram
    window.open(telegramUrl, '_blank');
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    const tempElement = document.createElement('textarea');
    tempElement.value = text;
    document.body.appendChild(tempElement);
    tempElement.select();
    
    try {
        document.execCommand('copy');
        alert('–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    } catch (err) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç: ', err);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –≤—Ä—É—á–Ω—É—é.');
    }
    
    document.body.removeChild(tempElement);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ —Å–º–∞–π–ª–∏–∫–∞
function isClickInsideEmoji(x, y) {
    const emojiRect = emojiTarget.getBoundingClientRect();
    const gameAreaRect = gameArea.getBoundingClientRect();
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∏–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    const relativeX = x - gameAreaRect.left;
    const relativeY = y - gameAreaRect.top;
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–º–∞–π–ª–∏–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
    const emojiLeft = parseFloat(emojiTarget.style.left) || (emojiRect.left - gameAreaRect.left);
    const emojiTop = parseFloat(emojiTarget.style.top) || (emojiRect.top - gameAreaRect.top);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ —Å–º–∞–π–ª–∏–∫–∞
    return (
        relativeX >= emojiLeft && 
        relativeX <= emojiLeft + targetWidth && 
        relativeY >= emojiTop && 
        relativeY <= emojiTop + targetHeight
    );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –¥–ª—è —Å–º–∞–π–ª–∏–∫–∞ –∏ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
function handleClick(event) {
    // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞
    if (!isGameRunning) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∏–∫–∞
    const x = event.clientX;
    const y = event.clientY;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –ø–æ —Å–º–∞–π–ª–∏–∫—É
    if (isClickInsideEmoji(x, y)) {
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç
        score++;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞
        scoreValue.textContent = score;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–Ω–≥
        updateRank();
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
        event.stopPropagation();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
        if (!checkGameStatus()) {
            // –ï—Å–ª–∏ –∏–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–µ—Ä–µ–º–µ—â–∞–µ–º —Å–º–∞–π–ª–∏–∫
            moveTargetToRandomPosition();
        }
    } else if (event.target === gameArea) {
        // –ö–ª–∏–∫ –±—ã–ª –ø–æ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏ (–ø—Ä–æ–º–∞—Ö)
        // –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç –∑–∞ –ø—Ä–æ–º–∞—Ö, –Ω–æ –Ω–µ –Ω–∏–∂–µ –Ω—É–ª—è
        score = Math.max(0, score - 5);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–∞
        scoreValue.textContent = score;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–Ω–≥
        updateRank();
    }
}

// –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
emojiTarget.removeEventListener('click', null);
gameArea.removeEventListener('click', null);

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
gameArea.addEventListener('click', handleClick);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
startButton.addEventListener('click', startGame);
pauseButton.addEventListener('click', togglePause);
restartButton.addEventListener('click', () => {
    modal.style.display = "none";
    startGame();
});
shareButton.addEventListener('click', shareResult);
telegramShareButton.addEventListener('click', shareToTelegram);

// –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', () => {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã
    gameAreaWidth = gameArea.clientWidth;
    gameAreaHeight = gameArea.clientHeight;
    maxTop = gameAreaHeight - targetHeight;
    maxLeft = gameAreaWidth - targetWidth;
    
    // –ï—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–º–∞–π–ª–∏–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ
    if (!isGameRunning) {
        emojiTarget.style.top = (gameAreaHeight / 2 - targetHeight / 2) + 'px';
        emojiTarget.style.left = (gameAreaWidth / 2 - targetWidth / 2) + 'px';
    }
});
